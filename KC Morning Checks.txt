alter profile TEST_HR_PROFILE limit SESSIONS_PER_USER unlimited;
alter profile TEST_HR_PROFILE limit CPU_PER_SESSION unlimited;
alter profile TEST_HR_PROFILE limit CPU_PER_CALL unlimited;
alter profile TEST_HR_PROFILE limit LOGICAL_READS_PER_SESSION unlimited;
alter profile TEST_HR_PROFILE limit LOGICAL_READS_PER_CALL unlimited;
alter profile TEST_HR_PROFILE limit  IDLE_TIME unlimited;
alter profile TEST_HR_PROFILE limit  CONNECT_TIME unlimited;

alter profile HR_PROFILE limit SESSIONS_PER_USER unlimited;
alter profile HR_PROFILE limit CPU_PER_SESSION unlimited;
alter profile HR_PROFILE limit CPU_PER_CALL unlimited;
alter profile HR_PROFILE limit LOGICAL_READS_PER_SESSION unlimited;
alter profile HR_PROFILE limit LOGICAL_READS_PER_CALL unlimited;
alter profile HR_PROFILE limit  IDLE_TIME unlimited;
alter profile HR_PROFILE limit  CONNECT_TIME unlimited;

alter profile HR_PROFILE_PSOFT limit SESSIONS_PER_USER unlimited;
alter profile HR_PROFILE_PSOFT limit CPU_PER_SESSION unlimited;
alter profile HR_PROFILE_PSOFT limit CPU_PER_CALL unlimited;
alter profile HR_PROFILE_PSOFT limit LOGICAL_READS_PER_SESSION unlimited;
alter profile HR_PROFILE_PSOFT limit LOGICAL_READS_PER_CALL unlimited;
alter profile HR_PROFILE_PSOFT limit  IDLE_TIME unlimited;
alter profile HR_PROFILE_PSOFT limit  CONNECT_TIME unlimited;



alter profile HR_PROFILE_USER limit SESSIONS_PER_USER unlimited;
alter profile HR_PROFILE_USER limit CPU_PER_SESSION unlimited;
alter profile HR_PROFILE_USER limit CPU_PER_CALL unlimited;
alter profile HR_PROFILE_USER limit LOGICAL_READS_PER_SESSION unlimited;
alter profile HR_PROFILE_USER limit LOGICAL_READS_PER_CALL unlimited;
alter profile HR_PROFILE_USER limit  IDLE_TIME unlimited;
alter profile HR_PROFILE_USER limit  CONNECT_TIME unlimited;


alter profile DEFAULT limit SESSIONS_PER_USER unlimited;
alter profile DEFAULT limit CPU_PER_SESSION unlimited;
alter profile DEFAULT limit CPU_PER_CALL unlimited;
alter profile DEFAULT limit LOGICAL_READS_PER_SESSION unlimited;
alter profile DEFAULT limit LOGICAL_READS_PER_CALL unlimited;
alter profile DEFAULT limit  IDLE_TIME unlimited;
alter profile DEFAULT limit  CONNECT_TIME unlimited;

ORACLE - PRDU5d0Rp8whG$D          PRDBUs$v4j31xPK
         TSTX8RuK9irc9U$          TSTRh9U7Z9V$tfh
       Inf0bigbossadmin  

INFREAD - INFAPRD  - PRDX1f4K9e$mSGw
SYSTEM  - HFKC     - PRDWOdG60A$z2xf
SYS     - PRD      - PRDLss6l2n#JQ7C
SYSTEM  - PRD      - PRDQr$R0Tp3zCo8

-- Staffing-counts.sql
-- conn sys@hfkc/PRDJQ9#o9Ix7Zya  <- Get counts
select count(1) from 
(SELECT
  postn.GEO_DISTRIBUTION,
  CONCAT(Position_Org.ORG_CD,CONCAT('   -   ',Position_Org.GM_DESCRSHORT)),
  CONCAT(Position_Org.ORG_CD,CONCAT('   -   ',Position_Org.DESCR50)),
  CONCAT(postn.PAY_PLAN,CONCAT('/',postn.GRADE)),
  decode(postn.PAY_PLAN, 'FP','FS','FO','FS',postn.PAY_PLAN)||'/'||postn.GRADE,
  decode(rtrim(postn.lang1_cd),NULL,' ',postn.LANG1_CD||'   '||postn.LANG1_SPEAK||'/'||postn.LANG1_READ),
  decode(rtrim(postn.lang2_cd),NULL,' ',postn.LANG2_CD||'   '||postn.LANG2_SPEAK||'/'||postn.LANG2_READ),
  postn.DESCR,
  decode(postn.PAY_PLAN, 'FP','FS','FO','FS',postn.PAY_PLAN),
  postn.GRADE,
  postn.REG_TEMP,
  postn.FLSA_STATUS,
  postn.GVT_WORK_SCHED,
  postn.MANAGER_LEVEL,
  decode(postn.GVT_POSN_SENS_CD, '1','NS','2','NCS','3','CS','4','SS'),
  postn.STAFF_PTRN_SEQ,
  postn.POSITION_NBR,
  postn.SKILL_CD1,
  postn.SKILL_CD2,
  decode(substr(postn.PAY_PLAN,1,1),'F',NULL,postn.GVT_OCC_SERIES),
  postn.LANG1_CD,
  postn.LANG1_SPEAK,
  postn.LANG1_READ,
  postn.GM_ALLOT,
  CONCAT(decode(STAFF_PTRN_ERRORS_SSN.SSN, NULL,NULL,'E'),decode(STAFF_PTRN_ERRORS_POSN.POSITION_NBR,NULL,NULL,'P')),
  'Incumbent',
  employee.NAME,
  employee.EMPLID,
  decode(employee.PAY_PLAN, 'FP','FS','FO','FS',employee.PAY_PLAN),
  employee.GRADE,
  employee.TED_DT,
  DEPARTMENT_per_pend.ORG_CD,
  employee.DOS_TEN_CD,
  employee.SKILL_CD1,
  ' ',
  PERSON_PENDING_to.BEGIN_DT,
  decode(rtrim(DEPARTMENT_per_pend.ORG_CD),NULL,' ','TO - '||DEPARTMENT_per_pend.ORG_CD),
  employee.PAR_NTE_DT,
  ' ',
  postn.REPORTS_TO,
  DW.SECTION.SECTION_CODE,
  DW.SECTION.DESCR,
  REPORT_NAME.NAME,
  REPORT_POSTN.pay_plan,
  REPORT_POSTN.REG_TEMP,
  postn.JOBCODE
FROM
  DW.CRNT_POSTN  postn,
  DW.DEPARTMENT  Position_Org,
  dw.STAFF_PTRN_ERRORS_POSN,
  dw.STAFF_PTRN_ERRORS_SSN,
  DW.DEPARTMENT  DEPARTMENT_per_pend,
  DW.PERSON_PENDING  PERSON_PENDING_to,
  DW.SECTION,
  DW.CRNT_POSTN  REPORT_POSTN,
  DW.REG_TEMP,
  DW.CRNT_PRSN  PERSON_pos_pend,
  DW.CRNT_POSTN  POSITION_per_pend,
  DW.PERSON_PENDING,
  DW.CRNT_PRSN  employee,
  DW.CRNT_PRSN  REPORT_NAME
WHERE
  ( postn.DEPARTMENT_KEY=Position_Org.DEPARTMENT_KEY(+)  )
  AND  ( postn.REG_TEMP=DW.REG_TEMP.REG_TEMP_CODE(+)  )
  AND  ( PERSON_pos_pend.CURRENT_IND(+)='Y'  )
  AND  ( postn.SECTION_KEY=DW.SECTION.SECTION_KEY(+)  )
  AND  ( DW.PERSON_PENDING.POSITION_CURRENT_KEY(+)=postn.POSITION_CURRENT_KEY  )
  AND  ( PERSON_pos_pend.PERSON_CURRENT_KEY(+)=DW.PERSON_PENDING.PERSON_CURRENT_KEY  )
  AND  ( DW.PERSON_PENDING.STATUS_CD(+)='AP'  )
  AND  ( employee.CURRENT_IND(+)='Y'  )
  AND  ( postn.CURRENT_IND(+)='Y'  )
  AND  ( employee.PERSON_CURRENT_KEY=PERSON_PENDING_to.PERSON_CURRENT_KEY(+)  )
  AND  ( PERSON_PENDING_to.POSITION_CURRENT_KEY=POSITION_per_pend.POSITION_CURRENT_KEY(+)  )
  AND  ( PERSON_PENDING_to.STATUS_CD(+)='AP'  )
  AND  ( POSITION_per_pend.CURRENT_IND(+)='Y'  )
  AND  ( POSITION_per_pend.DEPARTMENT_KEY=DEPARTMENT_per_pend.DEPARTMENT_KEY(+)  )
  AND  ( DW.PERSON_PENDING.PERSON_CURRENT_KEY(+) is not null  )
  AND  ( PERSON_PENDING_to.POSITION_CURRENT_KEY(+) is not null  )
  AND  ( employee.PERSON_TYPE(+)='Employee'  )
  AND  ( employee.SSN=STAFF_PTRN_ERRORS_SSN.SSN(+)  )
  AND  ( STAFF_PTRN_ERRORS_POSN.POSITION_NBR(+)=postn.POSITION_NBR  )
  AND  ( employee.REPORT_FLAG(+) = 'Y'  )
  AND  ( postn.REPORT_FLAG(+) = 'Y'  )
  AND  ( PERSON_pos_pend.PERSON_TYPE(+)='Employee'  )
  AND  ( REPORT_NAME.CURRENT_IND(+)='Y'  )
  AND  ( REPORT_NAME.PERSON_TYPE(+)='Employee'   )
  AND  ( REPORT_NAME.REPORT_FLAG(+) = 'Y'  )
  AND  ( REPORT_NAME.POSITION_CURRENT_KEY(+) = REPORT_POSTN.POSITION_CURRENT_KEY  )
  AND  ( postn.REPORTS_TO=REPORT_POSTN.POSITION_NBR(+)  )
  AND  ( employee.POSITION_CURRENT_KEY(+)=postn.POSITION_CURRENT_KEY  )
  AND  (
  postn.GEO_DISTRIBUTION  IN  ('Domestic', 'Overseas')
  AND  ( NOT  (
  postn.FILLED_UNFILLED  =  'Open'
  AND  PERSON_pos_pend.EMPLID  IS NULL  
  AND  DW.REG_TEMP.REG_TEMP_CODE  =  'X'
  )  )
  AND  (PERSON_PENDING_to.ASGNMT_SEQ  =  -1
  OR   PERSON_PENDING_to.ASGNMT_SEQ  IS NULL  )
  )
UNION  
(
SELECT
  postn.GEO_DISTRIBUTION,
  CONCAT(Position_Org.ORG_CD,CONCAT('   -   ',Position_Org.GM_DESCRSHORT)),
  CONCAT(Position_Org.ORG_CD,CONCAT('   -   ',Position_Org.DESCR50)),
  CONCAT(postn.PAY_PLAN,CONCAT('/',postn.GRADE)),
  decode(postn.PAY_PLAN, 'FP','FS','FO','FS',postn.PAY_PLAN)||'/'||postn.GRADE,
  decode(rtrim(postn.lang1_cd),NULL,' ',postn.LANG1_CD||'   '||postn.LANG1_SPEAK||'/'||postn.LANG1_READ),
  decode(rtrim(postn.lang2_cd),NULL,' ',postn.LANG2_CD||'   '||postn.LANG2_SPEAK||'/'||postn.LANG2_READ),
  postn.DESCR,
  decode(postn.PAY_PLAN, 'FP','FS','FO','FS',postn.PAY_PLAN),
  postn.GRADE,
  postn.REG_TEMP,
  postn.FLSA_STATUS,
  postn.GVT_WORK_SCHED,
  postn.MANAGER_LEVEL,
  decode(postn.GVT_POSN_SENS_CD, '1','NS','2','NCS','3','CS','4','SS'),
  postn.STAFF_PTRN_SEQ,
  postn.POSITION_NBR,
  postn.SKILL_CD1,
  postn.SKILL_CD2,
  decode(substr(postn.PAY_PLAN,1,1),'F',NULL,postn.GVT_OCC_SERIES),
  postn.LANG1_CD,
  postn.LANG1_SPEAK,
  postn.LANG1_READ,
  postn.GM_ALLOT,
  ' ',
  'Pending',
  PERSON_pos_pend.NAME,
  PERSON_pos_pend.EMPLID,
  decode(Employee_Step_Pending.PAY_PLAN, 'FP','FS','FO','FS',Employee_Step_Pending.PAY_PLAN),
  Employee_Step_Pending.GRADE,
  PERSON_pos_pend.TOUR_END_DT,
  DEPARTMENT_pos_pend.ORG_CD,
  Emp_Pend_TENURE.DOS_TEN_CD,
  Emp_Pend_SKILL_CD.SKILL_CD,
  ' ',
  DW.PERSON_PENDING.BEGIN_DT,
  decode(rtrim(DEPARTMENT_pos_pend.ORG_CD),NULL,' ','FR -'||DEPARTMENT_pos_pend.ORG_CD),
  PERSON_pos_pend.PAR_NTE_DT,
  ' *  *  ',
  postn.REPORTS_TO,
  DW.SECTION.SECTION_CODE,
  DW.SECTION.DESCR,
  REPORT_NAME.NAME,
  REPORT_POSTN.pay_plan,
  REPORT_POSTN.REG_TEMP,
  postn.JOBCODE
FROM
  DW.CRNT_POSTN  postn,
  DW.DEPARTMENT  Position_Org,
  DW.CRNT_PRSN  PERSON_pos_pend,
  DW.STEP  Employee_Step_Pending,
  DW.DEPARTMENT  DEPARTMENT_pos_pend,
  DW.TENURE  Emp_Pend_TENURE,
  DW.SKILL_CD  Emp_Pend_SKILL_CD,
  DW.PERSON_PENDING,
  DW.SECTION,
  DW.CRNT_POSTN  REPORT_POSTN,
  DW.REG_TEMP,
  DW.PERSON_PENDING  PERSON_PENDING_to,
  DW.CRNT_POSTN  POSITION_pos_pend,
  DW.CRNT_PRSN  REPORT_NAME,
  DW.CRNT_PRSN  employee
WHERE
  ( postn.DEPARTMENT_KEY=Position_Org.DEPARTMENT_KEY(+)  )
  AND  ( postn.REG_TEMP=DW.REG_TEMP.REG_TEMP_CODE(+)  )
  AND  ( PERSON_pos_pend.CURRENT_IND(+)='Y'  )
  AND  ( PERSON_pos_pend.STEP_KEY=Employee_Step_Pending.STEP_KEY(+)  )
  AND  ( postn.SECTION_KEY=DW.SECTION.SECTION_KEY(+)  )
  AND  ( DW.PERSON_PENDING.POSITION_CURRENT_KEY(+)=postn.POSITION_CURRENT_KEY  )
  AND  ( PERSON_pos_pend.PERSON_CURRENT_KEY(+)=DW.PERSON_PENDING.PERSON_CURRENT_KEY  )
  AND  ( DW.PERSON_PENDING.STATUS_CD(+)='AP'  )
  AND  ( POSITION_pos_pend.CURRENT_IND(+)='Y'  )
  AND  ( PERSON_pos_pend.POSITION_CURRENT_KEY=POSITION_pos_pend.POSITION_CURRENT_KEY(+)  )
  AND  ( POSITION_pos_pend.DEPARTMENT_KEY=DEPARTMENT_pos_pend.DEPARTMENT_KEY(+)  )
  AND  ( employee.CURRENT_IND(+)='Y'  )
  AND  ( postn.CURRENT_IND(+)='Y'  )
  AND  ( employee.PERSON_CURRENT_KEY=PERSON_PENDING_to.PERSON_CURRENT_KEY(+)  )
  AND  ( PERSON_PENDING_to.STATUS_CD(+)='AP'  )
  AND  ( Emp_Pend_SKILL_CD.SKILL_CD_KEY(+)=PERSON_pos_pend.SKILL_CD1_KEY  )
  AND  ( DW.PERSON_PENDING.PERSON_CURRENT_KEY(+) is not null  )
  AND  ( Emp_Pend_TENURE.TENURE_KEY(+)=PERSON_pos_pend.TENURE_KEY  )
  AND  ( PERSON_PENDING_to.POSITION_CURRENT_KEY(+) is not null  )
  AND  ( employee.PERSON_TYPE(+)='Employee'  )
  AND  ( employee.REPORT_FLAG(+) = 'Y'  )
  AND  ( postn.REPORT_FLAG(+) = 'Y'  )
  AND  ( PERSON_pos_pend.PERSON_TYPE(+)='Employee'  )
  AND  ( REPORT_NAME.CURRENT_IND(+)='Y'  )
  AND  ( REPORT_NAME.PERSON_TYPE(+)='Employee'   )
  AND  ( REPORT_NAME.REPORT_FLAG(+) = 'Y'  )
  AND  ( REPORT_NAME.POSITION_CURRENT_KEY(+) = REPORT_POSTN.POSITION_CURRENT_KEY  )
  AND  ( postn.REPORTS_TO=REPORT_POSTN.POSITION_NBR(+)  )
  AND  ( employee.POSITION_CURRENT_KEY(+)=postn.POSITION_CURRENT_KEY  )
  AND  (
  postn.GEO_DISTRIBUTION  IN  ('Domestic', 'Overseas')
  AND  ( NOT  (
  postn.FILLED_UNFILLED  =  'Open'
  AND  PERSON_pos_pend.EMPLID  IS NULL  
  AND  DW.REG_TEMP.REG_TEMP_CODE  =  'X'
  )  )
  AND  (PERSON_PENDING_to.ASGNMT_SEQ  =  -1
  OR   PERSON_PENDING_to.ASGNMT_SEQ  IS NULL  )
  AND  PERSON_pos_pend.EMPLID  IS NOT NULL  
  )
UNION  
SELECT
  postn.GEO_DISTRIBUTION,
  CONCAT(Position_Org.ORG_CD,CONCAT('   -   ',Position_Org.GM_DESCRSHORT)),
  CONCAT(Position_Org.ORG_CD,CONCAT('   -   ',Position_Org.DESCR50)),
  CONCAT(postn.PAY_PLAN,CONCAT('/',postn.GRADE)),
  decode(postn.PAY_PLAN, 'FP','FS','FO','FS',postn.PAY_PLAN)||'/'||postn.GRADE,
  decode(rtrim(postn.lang1_cd),NULL,' ',postn.LANG1_CD||'   '||postn.LANG1_SPEAK||'/'||postn.LANG1_READ),
  decode(rtrim(postn.lang2_cd),NULL,' ',postn.LANG2_CD||'   '||postn.LANG2_SPEAK||'/'||postn.LANG2_READ),
  postn.DESCR,
  decode(postn.PAY_PLAN, 'FP','FS','FO','FS',postn.PAY_PLAN),
  postn.GRADE,
  postn.REG_TEMP,
  postn.FLSA_STATUS,
  postn.GVT_WORK_SCHED,
  postn.MANAGER_LEVEL,
  decode(postn.GVT_POSN_SENS_CD, '1','NS','2','NCS','3','CS','4','SS'),
  postn.STAFF_PTRN_SEQ,
  postn.POSITION_NBR,
  postn.SKILL_CD1,
  postn.SKILL_CD2,
  decode(substr(postn.PAY_PLAN,1,1),'F',NULL,postn.GVT_OCC_SERIES),
  postn.LANG1_CD,
  postn.LANG1_SPEAK,
  postn.LANG1_READ,
  postn.GM_ALLOT,
  CONCAT(decode(STAFF_PTRN_ERRORS_SSN.SSN, NULL,NULL,'E'),decode(STAFF_PTRN_ERRORS_POSN.POSITION_NBR,NULL,NULL,'P')),
  'Incumbent Detail',
  DETAIL_CRNT_PRSN.NAME,
  DETAIL_CRNT_PRSN.EMPLID,
  DETAIL_CRNT_PRSN.PAY_PLAN,
  DETAIL_CRNT_PRSN. GRADE,
  DETAIL_CRNT_PRSN.TED_DT,
  DEPARTMENT_per_pend.ORG_CD,
  DETAIL_CRNT_PRSN.DOS_TEN_CD,
  Detail_Emp_Skill_CD1.SKILL_CD,
  ' ',
   DETAIL_PERSON_PENDING_to.BEGIN_DT,
   decode(rtrim(Detail_DEPARTMENT_per_pend.ORG_CD),NULL,'DET ','TO - '||Detail_DEPARTMENT_per_pend.ORG_CD),
  DETAIL_CRNT_PRSN.gvt_detail_expires_DT,
  ' *  *  * ',
  postn.REPORTS_TO,
  DW.SECTION.SECTION_CODE,
  DW.SECTION.DESCR,
  REPORT_NAME.NAME,
  REPORT_POSTN.pay_plan,
  REPORT_POSTN.REG_TEMP,
  postn.JOBCODE
FROM
  DW.CRNT_POSTN  postn,
  DW.DEPARTMENT  Position_Org,
  dw.STAFF_PTRN_ERRORS_POSN,
  dw.STAFF_PTRN_ERRORS_SSN,
  DW.DEPARTMENT  DEPARTMENT_per_pend,
  DW.SKILL_CD  Detail_Emp_Skill_CD1,
  DW.PERSON_PENDING  DETAIL_PERSON_PENDING_to,
  DW.DEPARTMENT  Detail_DEPARTMENT_per_pend,
  DW.SECTION,
  DW.CRNT_POSTN  REPORT_POSTN,
  DW.REG_TEMP,
  DW.CRNT_PRSN  PERSON_pos_pend,
  DW.PERSON_PENDING  PERSON_PENDING_to,
  DW.CRNT_POSTN  POSITION_per_pend,
  DW.CRNT_POSTN  Detail_POSITION_per_pend,
  DW.PERSON_PENDING,
  DW.CRNT_PRSN  DETAIL_CRNT_PRSN,
  DW.CRNT_PRSN  employee,
  DW.CRNT_PRSN  REPORT_NAME
WHERE
  ( postn.DEPARTMENT_KEY=Position_Org.DEPARTMENT_KEY(+)  )
  AND  ( postn.REG_TEMP=DW.REG_TEMP.REG_TEMP_CODE(+)  )
  AND  ( PERSON_pos_pend.CURRENT_IND(+)='Y'  )
  AND  ( postn.SECTION_KEY=DW.SECTION.SECTION_KEY(+)  )
  AND  ( DW.PERSON_PENDING.POSITION_CURRENT_KEY(+)=postn.POSITION_CURRENT_KEY  )
  AND  ( PERSON_pos_pend.PERSON_CURRENT_KEY(+)=DW.PERSON_PENDING.PERSON_CURRENT_KEY  )
  AND  ( DW.PERSON_PENDING.STATUS_CD(+)='AP'  )
  AND  ( employee.CURRENT_IND(+)='Y'  )
  AND  ( postn.CURRENT_IND(+)='Y'  )
  AND  ( employee.PERSON_CURRENT_KEY=PERSON_PENDING_to.PERSON_CURRENT_KEY(+)  )
  AND  ( PERSON_PENDING_to.POSITION_CURRENT_KEY=POSITION_per_pend.POSITION_CURRENT_KEY(+)  )
  AND  ( PERSON_PENDING_to.STATUS_CD(+)='AP'  )
  AND  ( POSITION_per_pend.CURRENT_IND(+)='Y'  )
  AND  ( POSITION_per_pend.DEPARTMENT_KEY=DEPARTMENT_per_pend.DEPARTMENT_KEY(+)  )
  AND  ( DW.PERSON_PENDING.PERSON_CURRENT_KEY(+) is not null  )
  AND  ( PERSON_PENDING_to.POSITION_CURRENT_KEY(+) is not null  )
  AND  ( employee.PERSON_TYPE(+)='Employee'  )
  AND  ( employee.SSN=STAFF_PTRN_ERRORS_SSN.SSN(+)  )
  AND  ( STAFF_PTRN_ERRORS_POSN.POSITION_NBR(+)=postn.POSITION_NBR  )
  AND  ( employee.REPORT_FLAG(+) = 'Y'  )
  AND  ( postn.REPORT_FLAG(+) = 'Y'  )
  AND  ( PERSON_pos_pend.PERSON_TYPE(+)='Employee'  )
  AND  ( postn.POSITION_NBR=DETAIL_CRNT_PRSN.GVT_DETL_POSN_NBR(+)  )
  AND  ( DETAIL_CRNT_PRSN.SKILL_CD1_KEY=Detail_Emp_Skill_CD1.SKILL_CD_KEY(+)  )
  AND  ( DETAIL_CRNT_PRSN.PERSON_CURRENT_KEY=DETAIL_PERSON_PENDING_to.PERSON_CURRENT_KEY(+)  )
  AND  ( DETAIL_PERSON_PENDING_to.STATUS_CD(+)='AP'  )
  AND  ( DETAIL_PERSON_PENDING_to.POSITION_CURRENT_KEY(+) is not null  )
  AND  ( Detail_POSITION_per_pend.CURRENT_IND(+)='Y'  )
  AND  ( DETAIL_PERSON_PENDING_to.POSITION_CURRENT_KEY=Detail_POSITION_per_pend.POSITION_CURRENT_KEY(+)  )
  AND  ( Detail_POSITION_per_pend.DEPARTMENT_KEY=Detail_DEPARTMENT_per_pend.DEPARTMENT_KEY(+)  )
  AND  ( DETAIL_CRNT_PRSN.CURRENT_IND(+)='Y'  )
  AND  ( DETAIL_CRNT_PRSN.REPORT_FLAG(+) = 'Y'  )
  AND  ( REPORT_NAME.CURRENT_IND(+)='Y'  )
  AND  ( REPORT_NAME.PERSON_TYPE(+)='Employee'   )
  AND  ( REPORT_NAME.REPORT_FLAG(+) = 'Y'  )
  AND  ( REPORT_NAME.POSITION_CURRENT_KEY(+) = REPORT_POSTN.POSITION_CURRENT_KEY  )
  AND  ( postn.REPORTS_TO=REPORT_POSTN.POSITION_NBR(+)  )
  AND  ( employee.POSITION_CURRENT_KEY(+)=postn.POSITION_CURRENT_KEY  )
  AND  (
  postn.GEO_DISTRIBUTION  IN  ('Domestic', 'Overseas')
  AND  ( NOT  (
  postn.FILLED_UNFILLED  =  'Open'
  AND  PERSON_pos_pend.EMPLID  IS NULL  
  AND  DW.REG_TEMP.REG_TEMP_CODE  =  'X'
  )  )
  AND  (PERSON_PENDING_to.ASGNMT_SEQ  =  -1
  OR   PERSON_PENDING_to.ASGNMT_SEQ  IS NULL  )
  AND  DETAIL_CRNT_PRSN.EMPLID  IS NOT NULL  
  AND  DETAIL_CRNT_PRSN.ACTIVE_IND  =  'A'
  )
)
);
-- ********************************************************************************************************
-- UNION






-- Staffing-counts.sql
-- conn sys@hfkc/PRDJQ9#o9Ix7Zya  <- Get counts
-- ********************************************************************************************************
-- UNION

select count(1) from 
(
SELECT
  count(distinct(employee.PERSON_CURRENT_KEY)),
  Position_Org.LEVEL_4_ORG,
  Position_Org.BUREAU,
  DW.REG_TEMP.DESCR,
  Position_WORK_SCHEDULE.FULL_PART,
  count(distinct(postn.POSITION_NBR)),
  CONCAT(Position_Org.ORG_CD,CONCAT('   -   ',Position_Org.DESCR50)),
  Position_Org.GM_DESCRSHORT
FROM
  DW.DEPARTMENT  Position_Org,
  DW.CRNT_POSTN  postn,
  DW.REG_TEMP,
  DW.WORK_SCHEDULE  Position_WORK_SCHEDULE,
  DW.CRNT_PRSN  employee
WHERE
  ( postn.DEPARTMENT_KEY=Position_Org.DEPARTMENT_KEY(+)  )
  AND  ( postn.REG_TEMP=DW.REG_TEMP.REG_TEMP_CODE(+)  )
  AND  ( postn.WORK_SCHEDULE_KEY=Position_WORK_SCHEDULE.WORK_SCHEDULE_KEY(+)  )
  AND  ( employee.CURRENT_IND(+)='Y'  )
  AND  ( postn.CURRENT_IND(+)='Y'  )
  AND  ( employee.PERSON_TYPE(+)='Employee'  )
  AND  ( employee.REPORT_FLAG(+) = 'Y'  )
  AND  ( postn.REPORT_FLAG(+) = 'Y'  )
  AND  ( employee.POSITION_CURRENT_KEY(+)=postn.POSITION_CURRENT_KEY  )
  AND  (
  postn.GEO_DISTRIBUTION  IN  ('Domestic', 'Overseas')
  )
GROUP BY
  Position_Org.LEVEL_4_ORG, 
  Position_Org.BUREAU, 
  DW.REG_TEMP.DESCR, 
  Position_WORK_SCHEDULE.FULL_PART, 
  CONCAT(Position_Org.ORG_CD,CONCAT('   -   ',Position_Org.DESCR50)), 
  Position_Org.GM_DESCRSHORT
);



\\hrinffp1001\d$\Output\Production\prd\PCSTravel\cfms
\\hrewwnonprdfs01\u$\HRKC_dev_Move2DEV\DAILY LOAD

CREATE TABLESPACE human_resources
DATAFILE SIZE 128K
AUTOEXTEND ON NEXT 64K
MAXSIZE UNLIMITED
ENCRYPTION USING 'AES256'
DEFAULT STORAGE(ENCRYPT);




ADMINISTER KEY MANAGEMENT CREATE KEYSTORE '/u02/app/oracle/WALLETS/SAMPLEDB/' IDENTIFIED BY Testing123#Testing123#;